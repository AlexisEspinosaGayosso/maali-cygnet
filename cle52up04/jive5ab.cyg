#################################################################################
# maali cygnet file for jive5ab
#################################################################################

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

MAALI_URL="http://www.jive.nl/~verkout/evlbi/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.gz"
# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-v${MAALI_TOOL_VERSION}.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="apps"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# tool pre-requisites 
MAALI_TOOL_PREREQ="$MAALI_DEFAULT_MPI"

# add additional configure options
MAALI_TOOL_CONFIGURE=""
# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_WHATIS=""

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"
  
  maali_run "make -j 8 B2B=64"
  
  cp jive5ab $MAALI_INSTALL_DIR/bin
}

##############################################################################
