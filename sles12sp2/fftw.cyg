##############################################################################
# maali cygnet file for fftw
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

FFTW is a C subroutine library for computing the discrete Fourier transform
(DFT) in one or more dimensions, of arbitrary input size, and of both real and
complex data (as well as of even/odd data, i.e. the discrete cosine/sine
transforms or DCT/DST).

For further information see http://www.fftw.org/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="gcc/6.3.0 intel/17.0.4"

# specify the architectures we want to build the library on
MAALI_TOOL_CPU_TARGET="knl broadwell"

# tool pre-requisites modules needed to install this new tool/package
if [[ $MAALI_TOOL_VERSION == "2."* ]]; then
   MAALI_TOOL_PREREQ="mvapich"
fi

# URL to download the source code from
MAALI_URL="http://www.fftw.org/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="devel"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_CPATH=1
MAALI_MODULE_SET_FPATH=1
MAALI_MODULE_SET_FCPATH=1
MAALI_MODULE_SET_MANPATH=1
MAALI_MODULE_SET_PKG_CONFIG_PATH=1
MAALI_MODULE_SET_FFTW_HOME='$MAALI_APP_HOME'
MAALI_MODULE_SET_FFTW_INCLUDE='$MAALI_APP_HOME/include'
MAALI_MODULE_SET_FFTW_LIB='$MAALI_APP_HOME/lib'

##############################################################################

function maali_build {
  if [[ $MAALI_COMPILER_NAME == "intel"* ]]; then
    export CC=icc
    export F77=ifort
    if [[ $MAALI_CPU_NAME == "knl" ]]; then
       export CFLAGS="-fPIC -xMIC-AVX512 -O3"
       export FFLAGS="-fPIC -xMIC-AVX512 -O3"
    else
       export CFLAGS="-fPIC -xCORE-AVX2 -O3"
       export FFLAGS="-fPIC -xCORE_AVX2 -O3"
    fi
  else
    export CC=gcc
    export F77=gfortran
    if [[ $MAALI_CPU_NAME == "knl" ]]; then
       export CFLAGS="-fPIC -mavx512f -mavx512cd -O2"
       export FFLAGS="-fPIC -mavx512f -mavx512cd -O2"
    else
       export CFLAGS="-fPIC -mavx2 -O3"
       export FFLAGS="-fPIC -mavx2 -O3"
    fi
  fi

  cd "$MAALI_TOOL_BUILD_DIR"

  if [[ $MAALI_TOOL_VERSION == "2."* ]]; then
     maali_run "./configure --prefix=$MAALI_INSTALL_DIR --enable-mpi --enable-type-prefix --enable-double"
  else
     maali_run "./configure --prefix=$MAALI_INSTALL_DIR --enable-threads --enable-double"
  fi

  maali_run "make -j $MAALI_CORES"
  maali_run "make install"
}

##############################################################################
