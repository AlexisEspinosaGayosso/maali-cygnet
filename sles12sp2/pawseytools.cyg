##############################################################################
# maali cygnet file for pawseytools
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

# URL to download the source code from - it's java
MAALI_URL="https://apollo.pawsey.org.au/team-super/${MAALI_TOOL_NAME}/repository/archive.tar.bz2?ref=${MAALI_TOOL_VERSION}"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}.tar.bz2"

# where the unpacked source code is located - no source code for you
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="tools"

# tool pre-requisites
MAALI_TOOL_PREREQ=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

function maali_download {
  
  MAALI_TOKEN=`cat $HOME/.hidden`
  curl --header "PRIVATE-TOKEN: $MAALI_TOKEN" "$MAALI_URL" > $MAALI_DST

}

##############################################################################

function maali_build {

  cd $MAALI_TOOL_BUILD_DIR*

  maali_makedir "$MAALI_INSTALL_DIR/bin"

  for file in `ls *`
  do
    maali_run "install -m 755 $file $MAALI_INSTALL_DIR/bin/"
  done

  # version dependent
  sed -i -e 's/PAWSEY_TOOLS_VERSION/'$MAALI_TOOL_VERSION'/g' $MAALI_INSTALL_DIR/bin/startServer
}

###############################################################################
