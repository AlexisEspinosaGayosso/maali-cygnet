##############################################################################
# maali cygnet file for six
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Six is a Python 2 and 3 compatibility library. It provides utility functions
for smoothing over the differences between the Python versions with the goal of
writing Python code that is compatible on both Python versions.

For further information see https://pypi.python.org/pypi/six

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_PYTHON"

# URL to download the source code from
#MAALI_URL="http://pypi.python.org/packages/source/$MAALI_PYTHON_FIRSTLETTER/$MAALI_TOOL_NAME_ORIG/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"
MAALI_URL="https://files.pythonhosted.org/packages/source/$MAALI_PYTHON_FIRSTLETTER/$MAALI_TOOL_NAME_ORIG/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION"

##############################################################################

function maali_python_build {
  # should work with most python packages

  # Call e.g. python2.7, python3.6 directly, rather than just python.
  PYTHON_MAJOR_MINOR_VERSION=`echo "$PYTHON_VERSION" | cut -d '.' -f 1,2`
  export PYTHON="python${PYTHON_MAJOR_MINOR_VERSION}"

  # need to add the python library path to PYTHONPATH temporarily
  MAALI_OLD_PYTHONPATH=$PYTHONPATH
  MAALI_NEWPYTHONPATH="$MAALI_INSTALL_DIR/$MAALI_PYTHON_LIBDIR/python$MAALI_PYTHON_LIB_VERSION/site-packages"
  export PYTHONPATH="$MAALI_NEWPYTHONPATH:$PYTHONPATH"

  maali_makedir "$MAALI_NEWPYTHONPATH"

  cd "$MAALI_TOOL_BUILD_DIR"
if [ "$MAALI_COMPILER_NAME" == "gcc" ]; then
  maali_run "python setup.py config"
elif [ "$MAALI_COMPILER_NAME" == "intel" ]; then
  maali_run "python setup.py config --compiler=intelem build_clib --compiler=intelem build_ext --compiler=intelem"
fi
  maali_run "$PYTHON setup.py build"
  maali_run "$PYTHON setup.py install --prefix=$MAALI_INSTALL_DIR"

  export PYTHONPATH=$MAALI_OLD_PYTHONPATH
}

