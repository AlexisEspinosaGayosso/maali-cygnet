##############################################################################
# maali cygnet file for Picard Tools
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

Picard is a set of command line tools for manipulating high-throughput
sequencing (HTS) data and formats such as SAM/BAM/CRAM and VCF. These file
formats are defined in the Hts-specs repository. See especially the SAM
specification and the VCF specification.

For further information see https://broadinstitute.github.io/picard/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

VER_MAJOR=$(echo $MAALI_TOOL_VERSION | cut -d . -f 1)
VER_MINOR=$(echo $MAALI_TOOL_VERSION | cut -d . -f 2)
if [ "$VER_MAJOR" -ge 2 -a "$VER_MINOR" -ge 6 ] ; then
  # URL to download the source code from
  MAALI_URL="https://github.com/broadinstitute/picard/releases/download/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME.jar"
  # location we are downloading the source code to
  MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.jar"
  # where the unpacked source code is located
  MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"
else
  # URL to download the source code from
  MAALI_URL="https://github.com/broadinstitute/picard/releases/download/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-tools-$MAALI_TOOL_VERSION.zip"
  # location we are downloading the source code to
  MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.zip"
  # where the unpacked source code is located
  MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-tools-$MAALI_TOOL_VERSION"
fi

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="java/8u151"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

if [ "$VER_MAJOR" -ge 2 -a "$VER_MINOR" -ge 6 ] ; then

  function maali_unpack {
    log " .. supressing unpacking as we have downloaded a JAR file"
  }

  function maali_pre_build {
    maali_makedir "$MAALI_TOOL_BUILD_DIR"

    MAALI_DST_FILESIZE=$(stat -c%s "$MAALI_DST")
    if [ $MAALI_DST_FILESIZE -eq 0 ]; then
      maali_die "$MAALI_DST is 0 bytes big"
    fi

    cp -p $MAALI_DST $MAALI_TOOL_BUILD_DIR/picard.jar
  }

fi

  function maali_build {
    cd "$MAALI_TOOL_BUILD_DIR"
  
    maali_makedir "$MAALI_INSTALL_DIR/jar"
    maali_makedir "$MAALI_INSTALL_DIR/bin"
  
    cat <<EOF >"$MAALI_INSTALL_DIR/bin/picard"
#!/bin/bash

java -Xmx20g -jar \$MAALI_PICARD_HOME/jar/picard.jar \$*
EOF
    maali_run "chmod 755 $MAALI_INSTALL_DIR/bin/picard"
    for f in *.jar ; do
      maali_run "install -m 644 $f $MAALI_INSTALL_DIR/jar/"
    done
  }

##############################################################################
