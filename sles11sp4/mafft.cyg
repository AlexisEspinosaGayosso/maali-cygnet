##############################################################################
# maali cygnet file for mafft
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# URL to download the source code from
# MAALI_URL="http://bioinf.uni-greifswald.de/augustus/binaries/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"
MAALI_URL="http://mafft.cbrc.jp/alignment/software/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}-with-extensions-src.tgz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/${MAALI_TOOL_NAME}-${MAALI_TOOL_VERSION}-with-extensions"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ=""

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH="bin libexec/mafft"
MAALI_MODULE_SET_LD_LIBRARY_PATH=1

##############################################################################

function maali_build {
  cd $MAALI_TOOL_BUILD_DIR
  cd $MAALI_TOOL_BUILD_DIR/core
  cp Makefile Makefile.backup
  sed -i s^/usr/local^$MAALI_INSTALL_DIR^g Makefile
  make clean
  make
  make install
	
  cd $MAALI_TOOL_BUILD_DIR/extensions
  cp Makefile Makefile.backup
  sed -i s^/usr/local^$MAALI_INSTALL_DIR^g Makefile
  make clean
  make
  make install

}

##############################################################################
