##############################################################################
# maali cygnet file for TASSEL
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="binary"

# URL to download the source code from
MAALI_URL="http://www.maizegenetics.net/tassel/tassel${MAALI_TOOL_VERSION}_standalone.zip"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/tassel${MAALI_TOOL_VERSION}_standalone.zip"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/tassel${MAALI_TOOL_VERSION}_standalone"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites
MAALI_TOOL_PREREQ="java/1.7.0_65"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

function maali_build {
  cd $MAALI_TOOL_BUILD_DIR

  maali_run "mkdir -p $MAALI_INSTALL_DIR/jar"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/bin"

  for exe in run_anything.pl run_pipeline.pl start_tassel.pl
  do
    maali_run "install -m 755 $exe $MAALI_INSTALL_DIR/bin"
    sed -i -e "s!\$top/lib!$MAALI_INSTALL_DIR/jar!g" "$MAALI_INSTALL_DIR/bin/$exe"
  done

  cd lib
  for jar in *.jar
  do
    maali_run "install -m 644 $jar $MAALI_INSTALL_DIR/jar"
  done

}

##############################################################################
