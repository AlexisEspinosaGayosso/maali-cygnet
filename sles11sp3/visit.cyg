##############################################################################
# maali cygnet file for visit
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# Visit has underscores in the version...a bit of sed to deal with that
VISIT_VERSION="`echo $MAALI_TOOL_VERSION | sed -e 's/\./_/g'`"

# URL to download the VisIt build script
MAALI_URL="http://portal.nersc.gov/project/$MAALI_TOOL_NAME/releases/$MAALI_TOOL_VERSION/build_$MAALI_TOOL_NAME$VISIT_VERSION"

# location we are downloading VisIt build script to
MAALI_DST="$MAALI_SRC/build_$MAALI_TOOL_NAME$VISIT_VERSION"

# location of VisIt build 
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="tools"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="python/2.7.6 $MAALI_DEFAULT_MPI"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH='linux-x86_64/lib'
MAALI_MODULE_SET_PYTHONPATH='linux-x86_64/lib/site-packages'
MAALI_MODULE_SET_VISIT_ROOT='$MAALI_APP_HOME'

##############################################################################

function maali_unpack {
    maali_wiki ".....suppressing unpack. Using VisIt build script"

    # create the build directory for the VisIt script and copy the script there
    maali_makedir "$MAALI_TOOL_BUILD_DIR"
    cd $MAALI_TOOL_BUILD_DIR
    cp $MAALI_DST . 
    maali_run "chmod +x ./build_$MAALI_TOOL_NAME$VISIT_VERSION"
    maali_run "cp $MAALI_FILES_PATH/zeus.cmake $MAALI_TOOL_BUILD_DIR"
}

##############################################################################

function maali_build {

    # First build all of the third party librarie for VisIt 
    # --no-visit flag disables building VisIt
    cd $MAALI_TOOL_BUILD_DIR
    maali_run "PAR_COMPILER=$MPI_ROOT/bin/mpicc PAR_INCLUDE=-I$MPI_ROOT/include ./build_$MAALI_TOOL_NAME$VISIT_VERSION --build-mode Release --parallel --prefix $MAALI_INSTALL_DIR --system-python --qt --vtk --hdf5 --icet --netcdf --silo --silex --szip --xdmf --no-visit"

    # Unpack VisIt source code
    maali_run "tar xf $MAALI_TOOL_NAME$MAALI_TOOL_VERISON.tar.gz"

    # Use pre-built configure file for cmake
    cat <<EOF >$MAALI_TOOL_BUILD_DIR/zeus.cmake
#$MAALI_TOOL_BUILD_DIR/visit/cmake/3.0.2/linux-x86_64_gcc-4.8/bin/cmake
##
## ./build_visit2_9_2 generated host.cmake
## created: Mon Jun 22 14:07:32 AWST 2015
## system: Linux zeus 3.0.101-0.46-default #1 SMP Wed Dec 17 11:04:10 UTC 2014 (8356111) x86_64 x86_64 x86_64 GNU/Linux
## by: stapops

##
## Setup VISITHOME & VISITARCH variables.
##
SET(VISITHOME $MAALI_INSTALL_DIR/visit)
SET(VISITARCH linux-x86_64_gcc-4.8)

## Compiler flags.
##
VISIT_OPTION_DEFAULT(CMAKE_INSTALL_PREFIX $MAALI_INSTALL_DIR)
VISIT_OPTION_DEFAULT(VISIT_C_COMPILER gcc TYPE FILEPATH)
VISIT_OPTION_DEFAULT(VISIT_CXX_COMPILER g++ TYPE FILEPATH)
VISIT_OPTION_DEFAULT(VISIT_C_FLAGS " -m64 -fPIC -fvisibility=hidden" TYPE STRING)
VISIT_OPTION_DEFAULT(VISIT_CXX_FLAGS " -m64 -fPIC -fvisibility=hidden" TYPE STRING)

##
## Parallel Build Setup.
##
VISIT_OPTION_DEFAULT(VISIT_PARALLEL ON TYPE BOOL)
## (configured w/ mpi compiler wrapper)
VISIT_OPTION_DEFAULT(VISIT_MPI_COMPILER $MPI_ROOT/bin/mpicc TYPE FILEPATH)
VISIT_OPTION_DEFAULT(MPI_C_INCLUDE_PATH $MPI_ROOT/include TYPE FILEPATH)
VISIT_OPTION_DEFAULT(MPI_C_LIBRARIES $MPI_ROOT/lib/libmpi.so;$MPI_ROOT/lib/libmpi++.so TYPE FILEPATH)
VISIT_OPTION_DEFAULT(MPI_CXX_INCLUDE_PATH $MPI_ROOT/include TYPE FILEPATH)
VISIT_OPTION_DEFAULT(MPI_CXX_LIBRARIES $MPI_ROOT/lib/libmpi.so;$MPI_ROOT/lib/libmpi++.so TYPE FILEPATH)
VISIT_OPTION_DEFAULT(VISIT_PARALLEL_LINKER_FLAGS "-lstdc++" TYPE STRING)

##
## VisIt Thread Option
##
VISIT_OPTION_DEFAULT(VISIT_THREAD OFF TYPE BOOL)

##############################################################
##
## Database reader plugin support libraries
##
## The HDF4, HDF5 and NetCDF libraries must be first so that
## their libdeps are defined for any plugins that need them.
##
## For libraries with LIBDEP settings, order matters.
## Libraries with LIBDEP settings that depend on other
## Library's LIBDEP settings must come after them.
##############################################################
##

##
## Python
##
VISIT_OPTION_DEFAULT(VISIT_PYTHON_DIR $PYTHON_DIR)
VISIT_OPTION_DEFAULT(PYTHON_INCLUDE_PATH $PYTHON_DIR/include/python$MAALI_PYTHON_LIB_VERSION )
VISIT_OPTION_DEFAULT(PYTHON_LIBRARY $PYTHON_DIR/lib/libpython$MAALI_PYTHON_LIB_VERSION.so)
VISIT_OPTION_DEFAULT(PYTHON_LIBRARY_DIR $PYTHON_DIR/lib)
VISIT_OPTION_DEFAULT(PYTHON_VERSION $MAALI_PYTHON_LIB_VERSION)
SET(VISIT_PYTHON_SKIP_INSTALL ON)

##
## Qt
##
VISIT_OPTION_DEFAULT(VISIT_QT_BIN \${VISITHOME}/qt/4.8.3/\${VISITARCH}/bin)

##
## VTK
##
SETUP_APP_VERSION(VTK 6.1.0)
VISIT_OPTION_DEFAULT(VISIT_VTK_DIR \${VISITHOME}/vtk/\${VTK_VERSION}/\${VISITARCH})
##

##
## SZIP
##
VISIT_OPTION_DEFAULT(VISIT_SZIP_DIR \${VISITHOME}/szip/2.1/\${VISITARCH})

##
## HDF5
##
VISIT_OPTION_DEFAULT(VISIT_HDF5_DIR \${VISITHOME}/hdf5/1.8.7/\${VISITARCH})
VISIT_OPTION_DEFAULT(VISIT_HDF5_LIBDEP \${VISITHOME}/szip/2.1/\${VISITARCH}/lib sz /usr/lib z TYPE STRING)

##
## Ice-T
##
VISIT_OPTION_DEFAULT(VISIT_ICET_DIR \${VISITHOME}/icet/1.0.0/\${VISITARCH})

##
## NetCDF
##
VISIT_OPTION_DEFAULT(VISIT_NETCDF_DIR \${VISITHOME}/netcdf/4.1.1/\${VISITARCH})
VISIT_OPTION_DEFAULT(VISIT_NETCDF_LIBDEP HDF5_LIBRARY_DIR hdf5_hl HDF5_LIBRARY_DIR hdf5 ${VISIT_HDF5_LIBDEP} TYPE STRING)

##
## Silo
##
VISIT_OPTION_DEFAULT(VISIT_SILO_DIR \${VISITHOME}/silo/4.10.1/\${VISITARCH})
VISIT_OPTION_DEFAULT(VISIT_SILO_LIBDEP HDF5_LIBRARY_DIR hdf5 \${VISIT_HDF5_LIBDEP} TYPE STRING)

##
## Xdmf
##
VISIT_OPTION_DEFAULT(VISIT_XDMF_DIR \${VISITHOME}/Xdmf/2.1.1/\${VISITARCH})
VISIT_OPTION_DEFAULT(VISIT_XDMF_LIBDEP HDF5_LIBRARY_DIR hdf5  VTK_LIBRARY_DIRS vtklibxml2-\${VTK_MAJOR_VERSION}.\${VTK_MINOR_VERSION}  TYPE STRING)
EOF

    maali_run "cp $MAALI_TOOL_BUILD_DIR/zeus.cmake $MAALI_TOOL_NAME$MAALI_TOOL_VERSION/src/config-site/"

    # Use VisIt's cmake to generate VisIt makefiles and build environment
    cd $MAALI_TOOL_NAME$MAALI_TOOL_VERSION/src
    maali_run "$MAALI_TOOL_BUILD_DIR/visit/cmake/3.0.2/linux-x86_64_gcc-4.8/bin/cmake ."

    # Build VisIt
    maali_run "make -j $MAALI_CORES install"
}

##############################################################################
