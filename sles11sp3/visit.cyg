##############################################################################
# maali cygnet file for visit
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_GCC_COMPILERS"

# Visit has underscores in the version...a bit of sed to deal with that
VISIT_VERSION="`echo $MAALI_TOOL_VERSION | sed -e 's/\./_/g'`"

# URL to download the VisIt build script
MAALI_URL="http://portal.nersc.gov/project/$MAALI_TOOL_NAME/releases/$MAALI_TOOL_VERSION/build_$MAALI_TOOL_NAME$VISIT_VERSION"

# location we are downloading VisIt build script to
MAALI_DST="$MAALI_SRC/build_$MAALI_TOOL_NAME$VISIT_VERSION"

# location of VisIt build 
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="tools"

# tool pre-requisites modules needed to install this new tool/package
MAALI_TOOL_PREREQ="python/2.7.6 $MAALI_DEFAULT_MPI"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH='linux-x86_64/lib'
MAALI_MODULE_SET_PYTHONPATH='linux-x86_64/lib/site-packages'
MAALI_MODULE_SET_VISIT_ROOT='$MAALI_APP_HOME'

##############################################################################

function maali_unpack {
    maali_wiki ".....suppressing unpack. Using VisIt build script"

    # create the build directory for the VisIt script and copy the script there
    maali_run "mkdir -p $MAALI_TOOL_BUILD_DIR"
    cd $MAALI_TOOL_BUILD_DIR
    cp $MAALI_DST . 
    maali_run "chmod +x ./build_$MAALI_TOOL_NAME$VISIT_VERSION"
    maali_run "cp $MAALI_FILES_PATH/zeus.cmake $MAALI_TOOL_BUILD_DIR"
}

##############################################################################

function maali_build {

    # First build all of the third party librarie for VisIt 
    # --no-visit flag disables building VisIt
    cd $MAALI_TOOL_BUILD_DIR
    maali_run "PAR_COMPILER=$MPI_ROOT/bin/mpicc PAR_INCLUDE=-I$MPI_ROOT/include ./build_$MAALI_TOOL_NAME$VISIT_VERSION --build-mode Release --parallel --prefix $MAALI_INSTALL_DIR --system-python --qt --vtk --hdf5 --icet --netcdf --silo --silex --szip --xdmf --no-visit"

    # Unpack VisIt source code
    maali_run "tar xf $MAALI_TOOL_NAME$MAALI_TOOL_VERISON.tar.gz"

    # Use pre-built configure file for cmake
    maali_run "cp $MAALI_FILES_PATH/zeus.cmake $MAALI_TOOL_BUILD_DIR"
    maali_run "cp $MAALI_FILES_PATH/zeus.cmake $MAALI_TOOL_NAME$MAALI_TOOL_VERSION/src/config-site/"

    # Use VisIt's cmake to generate VisIt makefiles and build environment
    cd $MAALI_TOOL_NAME$MAALI_TOOL_VERSION/src
    maali_run "$MAALI_TOOL_BUILD_DIR/visit/cmake/3.0.2/linux-x86_64_gcc-4.8/bin/cmake ."

    # Build VisIt
    maali_run "make -j $MAALI_CORES install"
}

##############################################################################
