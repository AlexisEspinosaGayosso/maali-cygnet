##############################################################################
# maali cygnet file for samtools
##############################################################################

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
if [[ $(echo "if (${MAALI_TOOL_MAJOR_VERSION} >= 1) 1 else 0" | bc) -eq 1 ]]; then
    MAALI_URL="https://github.com/samtools/$MAALI_TOOL_NAME/releases/download/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2"
else
    MAALI_URL="http://sourceforge.net/projects/samtools/files/$MAALI_TOOL_NAME/$MAALI_TOOL_VERSION/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2/download"
fi

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.bz2"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# tool pre-requisites modules needed to install this new tool/package
if [[ $(echo "if (${MAALI_TOOL_MAJOR_VERSION} >= 1) 1 else 0" | bc) -eq 1 ]]; then
MAALI_TOOL_PREREQ="htslib/1.2.1"
fi

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ=""

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_LD_LIBRARY_PATH=1
MAALI_MODULE_SET_BAM_ROOT='$MAALI_APP_HOME'
#MAALI_MODULE_SET_SETENV='BAM_ROOT=$MAALI_APP_HOME'

##############################################################################

function maali_build {
  cd "$MAALI_TOOL_BUILD_DIR"

  # fix for SLES11
  sed -i -e 's/lcurses/lncurses/g' Makefile

  if [[ $(echo "if (${MAALI_TOOL_MAJOR_VERSION} >= 1) 1 else 0" | bc) -eq 1 ]]; then
      # this should already be installed
      rm -r htslib*

      if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
          sed -i -e 's!gcc!icc!g' Makefile
      fi

      sed -i -e 's!HTSDIR = htslib-1.2.1!HTSDIR = '$MAALI_HTSLIB_HOME'/include!g' Makefile
      sed -i -e 's!include $(HTSDIR)/htslib.mk!#include $(HTSDIR)/htslib.mk!g' Makefile
      sed -i -e 's!HTSLIB = $(HTSDIR)/!HTSLIB = '$MAALI_HTSLIB_HOME'/lib/!g' Makefile
      sed -i -e 's!BGZIP  = $(HTSDIR)/bgzip!BGZIP  = '$MAALI_HTSLIB_HOME'/bin/bgzip!g' Makefile

      maali_run "make"
      maali_run "make prefix=$MAALI_INSTALL_DIR install"
  else
      if [ "$MAALI_COMPILER_NAME" == "intel" ]; then
          sed -i -e 's!gcc!icc!g' Makefile
          sed -i -e 's!gcc!icc!g' bcftools/Makefile
      fi

      maali_run "make"
      maali_run "mkdir -p $MAALI_INSTALL_DIR/bin"
      maali_run "install -m 755 samtools $MAALI_INSTALL_DIR/bin"
    
      if [[ $(echo "if (${MAALI_TOOL_MAJOR_MINOR_VERSION} >= 0.1) 1 else 0" | bc) -eq 1 ]]; then
          MAALI_TOOL_BUGFIX_VERSION=`echo $MAALI_TOOL_VERSION | cut -d '.' -f 3`
          if [[ $(echo "if (${MAALI_TOOL_BUGFIX_VERSION} > 8) 1 else 0" | bc) -eq 1 ]]; then
              # Have To build bcftools seperately
              cd "$MAALI_TOOL_BUILD_DIR/bcftools"
              maali_run "make clean"
              maali_run "make"
              maali_run "install -m 755 bcftools $MAALI_INSTALL_DIR/bin"
              maali_run "install -m 755 vcfutils.pl $MAALI_INSTALL_DIR/bin"
              cd "$MAALI_TOOL_BUILD_DIR"
          fi
        fi

        maali_run "mkdir -p $MAALI_INSTALL_DIR/lib"
        maali_run "mv libbam.a $MAALI_INSTALL_DIR/lib"
        maali_run "mkdir -p $MAALI_INSTALL_DIR/include/bam"
        maali_run "mv *.h $MAALI_INSTALL_DIR/include/bam"
    fi

}

##############################################################################
