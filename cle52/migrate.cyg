##############################################################################
# maali cygnet file for migrate
##############################################################################

# specify which PrgEnv we want to build the tool with
MAALI_TOOL_CRAY_PRGENV="$MAALI_DEFAULT_CRAY_GCC_PRGENV"

# specify which cpus to target
MAALI_TOOL_CRAY_CPU_TARGET="$MAALI_DEFAULT_CRAY_PES"

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_COMPILERS"

# URL to download the source code from
MAALI_URL="http://popgen.sc.fsu.edu/newversions/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.src.tar.gz"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.src.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION/src"

# tool pre-requisites
MAALI_TOOL_PREREQ=""

# type of tool (eg. apps, devel, python, etc.)
MAALI_TOOL_TYPE="bio-apps"

# for auto-building module files
MAALI_MODULE_SET_PATH=1
MAALI_MODULE_SET_MANPATH='man'

##############################################################################

function maali_build {

  cd "$MAALI_TOOL_BUILD_DIR"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/man/man1"
  maali_run "mkdir -p $MAALI_INSTALL_DIR/bin"
  maali_run "./configure --prefix=$MAALI_INSTALL_DIR"

  # Need to Fix Makefile from mpicc
  sed -i s/mpicc/cc/g Makefile

  maali_run "make"
  maali_run "install -m 755 migrate-n $MAALI_INSTALL_DIR/bin/"
  maali_run "install -m 644 migrate.1 $MAALI_INSTALL_DIR/man/man1/"

  # purge for MPI
  maali_run "make clean"

  maali_run "./configure --prefix=$MAALI_INSTALL_DIR"

  # Need to Fix Makefile from mpicc
  sed -i s/mpicc/cc/g Makefile

  maali_run "make mpis"
  maali_run "install -m 755 migrate-n-mpi $MAALI_INSTALL_DIR/bin/"
}

##############################################################################
