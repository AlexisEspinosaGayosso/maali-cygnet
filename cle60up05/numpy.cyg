##############################################################################
# maali cygnet file for NumPy
##############################################################################

read -r -d '' MAALI_MODULE_WHATIS << EOF

NumPy is the fundamental package for scientific computing with Python. It contains among other things:
- a powerful N-dimensional array object
- sophisticated (broadcasting) functions
- tools for integrating C/C++ and Fortran code
- useful linear algebra, Fourier transform, and random number capabilities

For further information see http://www.numpy.org/

EOF

# specify which compilers we want to build the tool with
MAALI_TOOL_COMPILERS="$MAALI_DEFAULT_PYTHON"

# URL to download the source code from
MAALI_URL="https://files.pythonhosted.org/packages/source/$MAALI_PYTHON_FIRSTLETTER/$MAALI_TOOL_NAME_ORIG/$MAALI_TOOL_NAME_ORIG-$MAALI_TOOL_VERSION.zip"

# location we are downloading the source code to
MAALI_DST="$MAALI_SRC/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION.tar.gz"

# where the unpacked source code is located
MAALI_TOOL_BUILD_DIR="$MAALI_BUILD_DIR/$MAALI_TOOL_NAME-$MAALI_TOOL_VERSION"

# tool pre-requisites
MAALI_TOOL_PREREQ="PrgEnv-gnu/6.0.4 gcc/4.8.2 cray-libsci/17.11.1"

# tool build pre-requisites - not added to the module, only needed for building (loaded after MAALI_TOOL_PREREQ)
MAALI_TOOL_BUILD_PREREQ="setuptools/38.2.1 cython/0.27.3"

# for auto-building module files
MAALI_MODULE_SET_PATH=1

##############################################################################

function maali_python_build {

cd $MAALI_TOOL_BUILD_DIR

# Call e.g. python2.7, python3.6 directly, rather than just python.
PYTHON_MAJOR_MINOR_VERSION=`echo "$PYTHON_VERSION" | cut -d '.' -f 1,2`
export PYTHON="python${PYTHON_MAJOR_MINOR_VERSION}"

# Try to find a matching libsci_gnu library
GCC_MAJOR_MINOR=`gcc -dumpversion | tr -d '.' | cut -c 1-2`
LIBSCI_DIR=${CRAY_LIBSCI_BASE_DIR}/gnu/${GCC_MAJOR_MINOR}/${CRAY_CPU_TARGET}

if [ ! -d ${LIBSCI_DIR} ]; then
    echo "libsci library not found in ${LIBSCI_DIR}"
    exit 1
fi

cat <<EOF >site.cfg
[default]
libraries = sci_gnu
library_dirs = ${LIBSCI_DIR}/lib
include_dirs = ${LIBSCI_DIR}/include

[lapack]
lapack_libs = sci_gnu
library_dirs = ${LIBSCI_DIR}/lib
include_dirs = ${LIBSCI_DIR}/include

[blas]
blas_libs = sci_gnu
library_dirs = ${LIBSCI_DIR}/lib
include_dirs = ${LIBSCI_DIR}/include

[build]
compiler = unix
fcompiler = gnu95

[install]
prefix = ${MAALI_INSTALL_DIR}
install-lib = ${MAALI_INSTALL_DIR}/lib/python${MAALI_PYTHON_LIB_VERSION}/site-packages
EOF

maali_run "$PYTHON setup.py build"
maali_run "$PYTHON setup.py install --prefix=$MAALI_INSTALL_DIR"

}

##############################################################################
